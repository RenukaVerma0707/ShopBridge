Í6
rC:\Users\Ritesh Nirgude\source\repos\ShopBridge.Products\ShopBridge.Products.API\Controllers\ProductsController.cs
	namespace 	

ShopBridge
 
. 
Controllers  
{ 
[ 
Route 

(
 
$str 
) 
] 
[ 
ApiController 
] 
public 

class 
ProductsController #
:$ %
ControllerBase& 4
{ 
private 
readonly 
	IProducts "
_productsService# 3
;3 4
private 
readonly 
ILogger  
<  !
ProductsController! 3
>3 4
_logger5 <
;< =
public 
ProductsController !
(! "
	IProducts" +
productsService, ;
,; <
ILogger= D
<D E
ProductsControllerE W
>W X
loggerY _
)_ `
{ 	
_productsService 
= 
productsService .
;. /
_logger 
= 
logger 
; 
} 	
[ 	
HttpGet	 
] 
public 
async 
Task 
< 
IActionResult '
>' (
Get) ,
(, -
)- .
{ 	
var   
result   
=   
await   
_productsService   /
.  / 0
GetProducts  0 ;
(  ; <
)  < =
;  = >
if!! 
(!! 
result!! 
!=!! 
null!! 
)!! 
{"" 
_logger## 
.## 
LogInformation## &
(##& '
$str##' =
)##= >
;##> ?
return$$ 
Ok$$ 
($$ 
result$$  
)$$  !
;$$! "
}%% 
else'' 
{(( 
_logger)) 
.)) 
LogError))  
())  !
$str))! ;
))); <
;))< =
return** 
NotFound** 
(**  
result**  &
)**& '
;**' (
}++ 
},, 	
[.. 	
HttpPost..	 
].. 
public// 
async// 
Task// 
<// 
IActionResult// '
>//' (
Post//) -
(//- .
[//. /
FromBody/// 7
]//7 8
ProductRequest//9 G
product//H O
)//O P
{00 	
if11 
(11 
!11 

ModelState11 
.11 
IsValid11 #
)11# $
{22 
return33 

BadRequest33 !
(33! "

ModelState33" ,
)33, -
;33- .
}44 
var55 
result55 
=55 
await55 
_productsService55 /
.55/ 0

AddProduct550 :
(55: ;
product55; B
)55B C
;55C D
if66 
(66 
result66 
!=66 
null66 
)66 
{77 
_logger88 
.88 
LogInformation88 &
(88& '
$str88' @
)88@ A
;88A B
return99 
Ok99 
(99 
result99  
)99  !
;99! "
}:: 
else<< 
{== 
_logger>> 
.>> 
LogError>>  
(>>  !
$str>>! E
)>>E F
;>>F G
return?? 
NotFound?? 
(??  
product??  '
)??' (
;??( )
}@@ 
}AA 	
[DD 	
HttpPutDD	 
]DD 
publicEE 
asyncEE 
TaskEE 
<EE 
IActionResultEE '
>EE' (
PutEE) ,
(EE, -
[EE- .
FromBodyEE. 6
]EE6 7

ShopBridgeEE8 B
.EEB C
InfrastrustureEEC Q
.EEQ R
ModelsEER X
.EEX Y
ProductsEEY a
productEEb i
)EEi j
{FF 	
ifGG 
(GG 
!GG 

ModelStateGG 
.GG 
IsValidGG #
)GG# $
{HH 
returnII 

BadRequestII !
(II! "

ModelStateII" ,
)II, -
;II- .
}JJ 
varKK 
resultKK 
=KK 
awaitKK 
_productsServiceKK /
.KK/ 0
UpdateProductKK0 =
(KK= >
productKK> E
)KKE F
;KKF G
ifLL 
(LL 
resultLL 
!=LL 
nullLL 
)LL 
{MM 
_loggerNN 
.NN 
LogInformationNN &
(NN& '
$strNN' I
,NNI J
productNNK R
.NNR S
	ProductIdNNS \
)NN\ ]
;NN] ^
returnOO 
OkOO 
(OO 
resultOO  
)OO  !
;OO! "
}PP 
elseRR 
{SS 
_loggerTT 
.TT 
LogErrorTT  
(TT  !
$strTT! L
,TTL M
productTTN U
)TTU V
;TTV W
returnUU 

StatusCodeUU !
(UU! "
StatusCodesUU" -
.UU- .
Status404NotFoundUU. ?
,UU? @
$strUUA N
+UUO P
productUUQ X
.UUX Y
	ProductIdUUY b
+UUc d
$strUUe q
)UUq r
;UUr s
}VV 
}XX 	
[[[ 	

HttpDelete[[	 
([[ 
$str[[ 
)[[ 
][[ 
public\\ 
async\\ 
Task\\ 
<\\ 
IActionResult\\ '
>\\' (
Delete\\) /
(\\/ 0
Guid\\0 4
id\\5 7
)\\7 8
{]] 	
var^^ 
result^^ 
=^^ 
await^^ 
_productsService^^ /
.^^/ 0
Delete^^0 6
(^^6 7
id^^7 9
)^^9 :
;^^: ;
if__ 
(__ 
result__ 
!=__ 
null__ 
)__ 
{`` 
_loggeraa 
.aa 
LogInformationaa &
(aa& '
$straa' B
,aaB C
idaaD F
)aaF G
;aaG H
returnbb 
Okbb 
(bb 
resultbb  
)bb  !
;bb! "
}cc 
elsedd 
{ee 
_loggerff 
.ff 
LogErrorff  
(ff  !
$strff! 9
,ff9 :
idff; =
)ff= >
;ff> ?
returngg 

StatusCodegg !
(gg! "
StatusCodesgg" -
.gg- .
Status404NotFoundgg. ?
,gg? @
$strggA N
+ggO P
idggQ S
+ggT U
$strggV b
)ggb c
;ggc d
}hh 
}ii 	
}jj 
}kk Ö
yC:\Users\Ritesh Nirgude\source\repos\ShopBridge.Products\ShopBridge.Products.API\Controllers\WeatherForecastController.cs
	namespace 	

ShopBridge
 
. 
Products 
. 
API !
.! "
Controllers" -
{		 
[

 
ApiController

 
]

 
[ 
Route 

(
 
$str 
) 
] 
public 

class %
WeatherForecastController *
:+ ,
ControllerBase- ;
{ 
private 
static 
readonly 
string  &
[& '
]' (
	Summaries) 2
=3 4
new5 8
[8 9
]9 :
{ 	
$str 
, 
$str !
,! "
$str# +
,+ ,
$str- 3
,3 4
$str5 ;
,; <
$str= C
,C D
$strE L
,L M
$strN S
,S T
$strU a
,a b
$strc n
} 	
;	 

private 
readonly 
ILogger  
<  !%
WeatherForecastController! :
>: ;
_logger< C
;C D
public %
WeatherForecastController (
(( )
ILogger) 0
<0 1%
WeatherForecastController1 J
>J K
loggerL R
)R S
{ 	
_logger 
= 
logger 
; 
} 	
[ 	
HttpGet	 
] 
public 
IEnumerable 
< 
WeatherForecast *
>* +
Get, /
(/ 0
)0 1
{ 	
var 
rng 
= 
new 
Random  
(  !
)! "
;" #
return 

Enumerable 
. 
Range #
(# $
$num$ %
,% &
$num' (
)( )
.) *
Select* 0
(0 1
index1 6
=>7 9
new: =
WeatherForecast> M
{ 
Date   
=   
DateTime   
.    
Now    #
.  # $
AddDays  $ +
(  + ,
index  , 1
)  1 2
,  2 3
TemperatureC!! 
=!! 
rng!! "
.!!" #
Next!!# '
(!!' (
-!!( )
$num!!) +
,!!+ ,
$num!!- /
)!!/ 0
,!!0 1
Summary"" 
="" 
	Summaries"" #
[""# $
rng""$ '
.""' (
Next""( ,
("", -
	Summaries""- 6
.""6 7
Length""7 =
)""= >
]""> ?
}## 
)## 
.$$ 
ToArray$$ 
($$ 
)$$ 
;$$ 
}%% 	
}&& 
}'' ø

[C:\Users\Ritesh Nirgude\source\repos\ShopBridge.Products\ShopBridge.Products.API\Program.cs
	namespace

 	

ShopBridge


 
.

 
Products

 
.

 
API

 !
{ 
public 

class 
Program 
{ 
public 
static 
void 
Main 
(  
string  &
[& '
]' (
args) -
)- .
{ 	
CreateHostBuilder 
( 
args "
)" #
.# $
Build$ )
() *
)* +
.+ ,
Run, /
(/ 0
)0 1
;1 2
} 	
public 
static 
IHostBuilder "
CreateHostBuilder# 4
(4 5
string5 ;
[; <
]< =
args> B
)B C
=>D F
Host 
.  
CreateDefaultBuilder %
(% &
args& *
)* +
. $
ConfigureWebHostDefaults )
() *

webBuilder* 4
=>5 7
{ 

webBuilder 
. 

UseStartup )
<) *
Startup* 1
>1 2
(2 3
)3 4
;4 5
} 
) 
; 
} 
} û
[C:\Users\Ritesh Nirgude\source\repos\ShopBridge.Products\ShopBridge.Products.API\Startup.cs
	namespace 	

ShopBridge
 
{ 
public 

class 
Startup 
{ 
public 
Startup 
( 
IConfiguration %
configuration& 3
)3 4
{ 	
Configuration 
= 
configuration )
;) *
} 	
public 
IConfiguration 
Configuration +
{, -
get. 1
;1 2
}3 4
public 
void 
ConfigureServices %
(% &
IServiceCollection& 8
services9 A
)A B
{ 	
services 
. 
AddDbContext !
<! "
ProductDbContext" 2
>2 3
(3 4
options4 ;
=>< >
options 
. 
UseSqlServer  
(  !
Configuration! .
.. /
GetConnectionString/ B
(B C
$strC U
)U V
)V W
)W X
;X Y
services   
.   
AddSwaggerGen   "
(  " #
c  # $
=>  % '
{!! 
c"" 
."" 

SwaggerDoc"" 
("" 
$str"" !
,""! "
new""# &
OpenApiInfo""' 2
{""3 4
Title""5 :
=""; <
$str""= M
,""M N
Version""O V
=""W X
$str""Y ]
}""^ _
)""_ `
;""` a
}## 
)## 
;## 
services$$ 
.$$ 
AddControllers$$ #
($$# $
)$$$ %
;$$% &
services%% 
.%% 
	AddScoped%% 
<%% 
	IProducts%% (
,%%( )
ProductsService%%* 9
>%%9 :
(%%: ;
)%%; <
;%%< =
}(( 	
public++ 
void++ 
	Configure++ 
(++ 
IApplicationBuilder++ 1
app++2 5
,++5 6
IWebHostEnvironment++7 J
env++K N
)++N O
{,, 	
if-- 
(-- 
env-- 
.-- 
IsDevelopment-- !
(--! "
)--" #
)--# $
{.. 
app// 
.// %
UseDeveloperExceptionPage// -
(//- .
)//. /
;/// 0
}00 
app22 
.22 
UseHttpsRedirection22 #
(22# $
)22$ %
;22% &
app44 
.44 

UseRouting44 
(44 
)44 
;44 
app66 
.66 
UseAuthorization66  
(66  !
)66! "
;66" #
app99 
.99 

UseSwagger99 
(99 
)99 
;99 
app;; 
.;; 
UseEndpoints;; 
(;; 
	endpoints;; &
=>;;' )
{<< 
	endpoints== 
.== 
MapControllers== (
(==( )
)==) *
;==* +
}>> 
)>> 
;>> 
app?? 
.?? 
UseSwaggerUI?? 
(?? 
c?? 
=>?? !
{@@ 
cAA 
.AA 
SwaggerEndpointAA !
(AA! "
$strAA" <
,AA< =
$strAA> S
)AAS T
;AAT U
}BB 
)BB 
;BB 
}CC 	
}DD 
}EE ¬
cC:\Users\Ritesh Nirgude\source\repos\ShopBridge.Products\ShopBridge.Products.API\WeatherForecast.cs
	namespace 	

ShopBridge
 
. 
Products 
. 
API !
{ 
public 

class 
WeatherForecast  
{ 
public 
DateTime 
Date 
{ 
get "
;" #
set$ '
;' (
}) *
public		 
int		 
TemperatureC		 
{		  !
get		" %
;		% &
set		' *
;		* +
}		, -
public 
int 
TemperatureF 
=>  "
$num# %
+& '
(( )
int) ,
), -
(- .
TemperatureC. :
/; <
$num= C
)C D
;D E
public 
string 
Summary 
{ 
get  #
;# $
set% (
;( )
}* +
} 
} 